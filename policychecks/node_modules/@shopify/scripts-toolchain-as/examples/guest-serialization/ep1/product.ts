import {LineItem} from './line_item';

@unmanaged
export class Product {
  implicitPublicField: i32;
  public explicitPublicField: i32;
  private privateField: i32;

  // ignored transient fields
  @shopify_transient
  transientField: i32;

  // basic types
  //
  // Temp comment out i16, u16, f32, as I'm using a ruby library msgpack to test, which doesn't have these types
  i8: i8;
  // i16: i16;
  i32: i32;
  i64: i64;
  isize: isize;
  u8: u8;
  // u16: u16;
  u32: u32;
  u64: u64;
  usize: usize;
  bool: bool;
  // f32: f32;
  f64: f64;

  str: string;

  // custome types
  variant: Variant;
  nestedValue: NestedValue;

  // nullable types
  nullableField: Variant | null = null;

  // compound types
  arrayOfi32: Array<i32>;
  arrayOfString: Array<string>;
  arrayOfVariant: Array<Variant>;
  arrayOfLineItem: Array<LineItem>;
  arrayOfArrayOfVariant: Array<Array<Variant>>;
  arrayOfNullableVariant: Array<Variant | null>;
}

export class Variant {
  i8: i8;
  u32: u32;
  bool: bool;
  f64: f64;
  lineItem: LineItem;
}

export class NestedValue {
  inner: i8;
}
