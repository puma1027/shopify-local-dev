"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GSField = void 0;
const gs_class_field_1 = require("./gs-class-field");
const utility_1 = require("./utility");
class GSField {
    constructor(name, type, alias = null, isTransient = false) {
        this.name = name;
        this.type = type;
        this.alias = alias;
        this.isTransient = isTransient;
    }
    get isClass() {
        return this.type.isClass;
    }
    get isNullableReference() {
        return this.type.isNullableReference;
    }
    get kind() {
        return this.type.kind;
    }
    get nameInSnakeCase() {
        const name = this.alias ? this.alias : this.name;
        return utility_1.toSnakeCase(name);
    }
    asClassField() {
        return this.type.isClass ? new gs_class_field_1.GSClassField(this.name, this.type, this.alias) : null;
    }
    get typeName() {
        if (this.isClass) {
            return this.asClassField().typeName;
        }
        else {
            return this.type.toString();
        }
    }
    get typeNameWithTypeArg() {
        if (this.isClass) {
            return this.asClassField().typeNameWithTypeArg;
        }
        else {
            return this.type.toString();
        }
    }
    getDefaultValue() {
        if (this.isClass) {
            return this.asClassField().getDefaultValue();
        }
        else {
            // default value for simple types can be auto inferred
            return null;
        }
    }
}
exports.GSField = GSField;
//# sourceMappingURL=gs-field.js.map