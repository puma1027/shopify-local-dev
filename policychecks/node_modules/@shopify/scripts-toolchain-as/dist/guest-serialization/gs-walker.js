"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GSWalker = void 0;
const assemblyscript_1 = require("assemblyscript");
const gs_class_field_1 = require("./gs-class-field");
// This walker walks and searches for `InputWrapper` and `OutputWrapper`
class GSWalker extends assemblyscript_1.ExportsWalker {
    constructor(program, includePrivate = false) {
        super(program, includePrivate);
        this.inputWrapper = null;
        this.outputWrapper = null;
    }
    // The following visitors are triggered by walk()
    visitFunction(_name, _element) {
        return;
    }
    visitClass(name, element) {
        if (name == '__Input') {
            this.inputWrapper = new gs_class_field_1.GSClassField('__Input', element.type);
        }
        else if (name == '__Output') {
            this.outputWrapper = new gs_class_field_1.GSClassField('__Output', element.type);
        }
        return;
    }
    visitInterface(name, element) {
        this.visitClass(name, element);
    }
    visitGlobal(_name, _element) { }
    visitEnum(_name, _element) { }
    visitField(_name, _element) { }
    // Not implemented visitors
    // Check https://github.com/AssemblyScript/assemblyscript/blob/master/src/definitions.ts for reference
    visitNamespace(_name, _element) {
        throw new Error('visitNamespace Not implemented');
    }
    visitAlias(_name, _element, _originalName) {
        throw new Error('visitAlias Not implemented');
    }
}
exports.GSWalker = GSWalker;
// This walker is a demo AS walker that extends AS ExportsWalker. When `walk()`, it traverses functions,,
// classes, etc with the hook methods.
//
// It's not being used anymore, just left as a reference
// @ts-ignore
class GSDemoWalker extends assemblyscript_1.ExportsWalker {
    constructor(program, includePrivate = false) {
        super(program, includePrivate);
        this.walk();
    }
    visitFunction(_name, _element) {
        return;
    }
    visitClass(_name, _element) {
        return;
    }
    visitInterface(name, element) {
        this.visitClass(name, element);
    }
    // Not implemented visitors
    // Check https://github.com/AssemblyScript/assemblyscript/blob/master/src/definitions.ts for reference
    visitGlobal(_name, _element) {
        throw new Error('visitGlobal Not implemented');
    }
    visitEnum(_name, _element) {
        throw new Error('visitEnum Not implemented');
    }
    visitField(_name, _element) {
        throw new Error('visitField Not implemented');
    }
    visitNamespace(_name, _element) {
        throw new Error('visitNamespace Not implemented');
    }
    visitAlias(_name, _element, _originalName) {
        throw new Error('visitAlias Not implemented');
    }
}
//# sourceMappingURL=gs-walker.js.map