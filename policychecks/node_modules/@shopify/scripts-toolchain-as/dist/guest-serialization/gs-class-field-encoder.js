"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GSClassFieldEncoder = void 0;
const assert_1 = require("assert");
const gs_field_writer_1 = require("./gs-field-writer");
class GSClassFieldEncoder {
    constructor(field) {
        this.field = field;
    }
    static build(field) {
        return new GSClassFieldEncoder(field).build();
    }
    build() {
        const field = this.field;
        const ret = [];
        assert_1.strict(!field.isExtendedArray, 'Types extend Array are not supported. Please use a wrapper type');
        const fields = field.getNonTransientFields();
        ret.push(`  encode(writer: Writer): void {`);
        ret.push(`    writer.writeMapSize(${fields.length});`);
        fields.forEach((f, _i) => {
            const fieldName = f.nameInSnakeCase;
            ret.push(`    writer.writeString('${fieldName}');`);
            ret.push(gs_field_writer_1.GSFieldWriter.build(f, 2, `this.${f.name}`));
        });
        ret.push(`  }`);
        return ret.join('\n');
    }
}
exports.GSClassFieldEncoder = GSClassFieldEncoder;
//# sourceMappingURL=gs-class-field-encoder.js.map