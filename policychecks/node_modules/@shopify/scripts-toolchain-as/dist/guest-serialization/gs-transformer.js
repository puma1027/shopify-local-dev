"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
const fs_1 = require("fs");
const path = __importStar(require("path"));
const transform_1 = require("assemblyscript/cli/transform");
const gs_builder_1 = require("./gs-builder");
module.exports = class GSTransformer extends transform_1.Transform {
    afterInitialize(program) {
        this.program = program;
    }
    afterCompile(_module) {
        const projectPath = process.cwd();
        this.createTempFolder(projectPath);
        fs_1.writeFileSync('tmp/serializer.ts', gs_builder_1.GSBuilder.build(this.program));
    }
    createTempFolder(projectPath) {
        const tmpDir = path.join(projectPath, 'tmp');
        if (!fs_1.existsSync(tmpDir)) {
            fs_1.mkdirSync(tmpDir);
        }
    }
};
//# sourceMappingURL=gs-transformer.js.map