/**
 * A function that is similar to parseInt(2). This safeParseInt returns an error when the value is not a number (NaN) or is not a valid integer.
 *
 * @param v - Value to convert to an integer
 * @param radix - Optional radix
 */
export function safeParseInt(v: string, radix: i32 = 0): i64 {
  let parsedFloat = parseFloat(v);
  if (isNaN(parsedFloat)) {
    throw new Error(v + ' is not a number');
  }

  // Manual fallback because:
  //  - parseFloat("0") = 0.0
  //  - F64.isSafeInteger(0.0) = true
  //  - parseInt("0.0") is NaN
  if (parsedFloat == 0.0) return 0;

  if (F64.isSafeInteger(parsedFloat)) {
    return <i64>parseInt(parsedFloat.toString(), radix);
  }

  throw new Error(v + ' is not an integer');
}
