import {Currency} from '../assembly/Money/Currency/Currency';
import {Currencies} from '../assembly/Money/Currency/Currencies';

describe('Currency', () => {
  describe('known currency', () => {
    it('should return currency code string', () => {
      const currency = new Currency('SHOP', 100);
      expect(currency.code).toBe('SHOP');
    });

    it('should convert units to subunits', () => {
      const currency = new Currency('SHOP', 100);
      expect(currency.unitsToSubunits(1.234)).toBe(123);
    });

    it('should convert subunits to units', () => {
      const currency = new Currency('SHOP', 100);
      expect(currency.subunitsToUnits(1234)).toBe(12.34);
    });

    it('should output string', () => {
      const currency = new Currency('SHOP', 100);
      expect(currency.toString()).toBe('SHOP');
    });
  });
});

describe('Currencies', () => {
  describe('fromCode', () => {
    it('creates known currency', () => {
      // Assuming USD is a valid currency in this test
      const currency = Currencies.fromCode('USD');
      expect(currency.code).toBe('USD');
      expect(currency.unitsToSubunits(1.234)).toBe(123);
    });

    it('does not create unknown currency', () => {
      // Assuming SHOP is not a valid currency in this test
      expect(() => {
        Currencies.fromCode('SHOP');
      }).toThrow();
    });
  });
});
